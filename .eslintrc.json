// Be aware of that if there is any issue with this JSON, then all features of linting won't work correctly!
{
  "parser": "@typescript-eslint/parser", // Specifies the ESLint parser
  "extends": [ // add extends here if you want all rules, if you want only some of them, add to "plugins"
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:prettier/recommended", // Enables eslint-plugin-prettier and displays prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
    "plugin:react/recommended",
    "plugin:jsx-a11y/recommended"
    // "plugin:@mizdra/layout-shift/recommended"
  ],
  "parserOptions": {
    "ecmaVersion": 2018, // Allows for the parsing of modern ECMAScript features
    "sourceType": "module", // Allows for the use of imports
    "project": "./tsconfig.json", // Required to have rules that rely on Types.
    "tsconfigRootDir": "./"
  },
  "plugins": [ // if you are using rules, you need to include plugin here or include in extends (but then all rules are added, and you just override them here)
  ],
  "rules": {
    // Place to specify ESLint rules. Can be used to overwrite rules specified from the extended configs
    "@typescript-eslint/no-explicit-any": 2,
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "react/react-in-jsx-scope": 0,
    "jsx-a11y/anchor-is-valid": 0,
    "react/display-name": 0
  }
}